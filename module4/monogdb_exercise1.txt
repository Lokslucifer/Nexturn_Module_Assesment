1.
db.users.aggregate([
  {
    $lookup: {
      from: "orders",
      localField: "userId",
      foreignField: "userId",
      as: "orderDetails"
    }
  },
  {
    $unwind: "$orderDetails"
  },
  {
    $group: {
      _id: "$userId",
      total: { $sum: "$orderDetails.totalAmount" }
    }
  },
  {
    $match: {
      total: { $gt: 500 }
    }
  },
  {
    $project: {
      _id: 0,
      userId: "$_id",
      total: 1
    }
  }
])

2.
db.products.aggregate([
    {
        $unwind:"ratings"
    },
    {
        $group:{
            _id:"$productId",avgrating:{$avg:"$ratings.rating"}
    }
    },
    {$match:{
        "avgrating":{$gte:4}
    }},
    {$project:
        {"_id":0,"productId":"$_id","avgrating":1}
    }
    ])

3.
db.orders.aggregate([
  {
    $match: {
      date: {
        $gte: new ISODate("2024-12-01"),
        $lte: new ISODate("2024-12-31")
      }
    }
  },
  {
    $lookup: {
      from: "users",
      localField: "userId",
      foreignField: "userId",
      as: "userdetails"
    }
  },
  {
    $unwind: "$userdetails"
  },
  {
    $project: {
      _id: 0,
      productId: "$_id",
      userId: "$userdetails.userId",
      userName: "$userdetails.name"
    }
  }
])

4.
db.orders.aggregate([
  {
    $match: { orderId: "ORD001" }
  },
  {
    $unwind: "$items"
  },
  {
    $lookup: {
      from: "products",
      localField: "items.productId",
      foreignField: "productId",
      as: "productDetails"
    }
  },
  {
    $unwind: "$productDetails"
  },
  {
    $addFields: {
      updatedStock: {
        $subtract: ["$productDetails.stock", "$items.quantity"]
      }
    }
  },
  {
    $merge: {
      into: "products",
      whenMatched: "merge",
      whenNotMatched: "discard"
    }
  }
])


5.

db.warehouses.createIndex({ location: "2dsphere" })

db.warehouses.find({
  location: {
    $near: {
      $geometry: {
        type: "Point",
        coordinates: [-74.006, 40.7128] // User's location
      },
      $maxDistance: 5000 // Optional: Maximum distance in meters
    }
  },
  products: "P001" // Only warehouses that stock the specified product
})



